import os
import asyncio
import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import (
    Application, CommandHandler, ConversationHandler, CallbackQueryHandler, ContextTypes
)

# üîπ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# üîπ –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–∫–µ–Ω –∏ –≤–µ–±—Ö—É–∫ URL –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
TOKEN = os.getenv("TELEGRAM_BOT_TOKEN", "7085352038:AAHD5jSpLk_sYq4gLW44iukYhEa3YHafHDA")
WEBHOOK_URL = "https://doseit.bot1.onrender.com/webhook"
PORT = int(os.getenv("PORT", 5000))

# üîπ –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏—è –æ–ø—Ä–æ—Å–∞
LANGUAGE, QUESTION_1, QUESTION_2, QUESTION_3, QUESTION_4, QUESTION_5, QUESTION_6 = range(7)

# üîπ –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
user_responses = {}

# Language texts
language_texts = {
    'ru': {
        'welcome': "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –≠—Ç–æ—Ç –±—ã—Å—Ç—Ä—ã–π –æ–ø—Ä–æ—Å–Ω–∏–∫ –ø–æ–º–æ–∂–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å, –∫–∞–∫–æ–π –∫–æ–º–ø–ª–µ–∫—Ç –±–∏–æ–¥–æ–±–∞–≤–æ–∫ DoseIt –ª—É—á—à–µ –≤—Å–µ–≥–æ –ø–æ–¥–æ–π–¥–µ—Ç –≤–∞–º –¥–ª—è —Å—Ç–∞—Ä—Ç–∞: –∫–æ–º–ø–ª–µ–∫—Ç –¥–ª—è –ø–µ—á–µ–Ω–∏, –Ω–µ—Ä–≤–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∏–ª–∏ –ñ–ö–¢.üìù",
        'question_1': "–í–æ–ø—Ä–æ—Å 1: –ö–∞–∫ —á–∞—Å—Ç–æ –≤—ã –∏—Å–ø—ã—Ç—ã–≤–∞–µ—Ç–µ –ø—Ä–æ–±–ª–µ–º—ã —Å –ø–∏—â–µ–≤–∞—Ä–µ–Ω–∏–µ–º? (–Ω–∞–ø—Ä–∏–º–µ—Ä, –≤–∑–¥—É—Ç–∏–µ, —Ç—è–∂–µ—Å—Ç—å, –∑–∞–ø–æ—Ä—ã, –¥–∏–∞—Ä–µ—è)\n\nA: –ß–∞—Å—Ç–æ ‚Äî –ø–æ—á—Ç–∏ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –∏–ª–∏ –±–æ–ª–µ–µ 3 —Ä–∞–∑ –≤ –Ω–µ–¥–µ–ª—é.\nB: –ò–Ω–æ–≥–¥–∞ ‚Äî –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –ø–∏—â–∏ –∏–ª–∏ –æ–±—Ä–∞–∑–∞ –∂–∏–∑–Ω–∏.\nC: –†–µ–¥–∫–æ ‚Äî –ø–æ—á—Ç–∏ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –∏—Å–ø—ã—Ç—ã–≤–∞—é –ø—Ä–æ–±–ª–µ–º.",
        'question_2': "–í–æ–ø—Ä–æ—Å 2: –ë—ã–≤–∞—é—Ç –ª–∏ —É –≤–∞—Å –∫–æ–∂–Ω—ã–µ –≤—ã—Å—ã–ø–∞–Ω–∏—è (–∞–∫–Ω–µ, —ç–∫–∑–µ–º–∞), –∏–ª–∏ –Ω–µ–ø—Ä–∏—è—Ç–Ω—ã–π –∑–∞–ø–∞—Ö –∏–∑–æ —Ä—Ç–∞, –∏–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å –æ–±–º–µ–Ω–æ–º –≤–µ—â–µ—Å—Ç–≤?\n\nA: –ß–∞—Å—Ç–æ ‚Äî –º–æ—è –∫–æ–∂–∞ –∏ —Ç–µ–ª–æ —Å–∏–ª—å–Ω–æ —Ä–µ–∞–≥–∏—Ä—É—é—Ç –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–∏—Ç–∞–Ω–∏—è.\nB: –ò–Ω–æ–≥–¥–∞ ‚Äî –±—ã–≤–∞—é—Ç –≤—Å–ø—ã—à–∫–∏, –Ω–æ –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ.\nC: –†–µ–¥–∫–æ –∏–ª–∏ –≤–æ–æ–±—â–µ –Ω–µ –±—ã–≤–∞–µ—Ç.",
        'question_3': "–í–æ–ø—Ä–æ—Å 3: –ö–∞–∫ –≤—ã –æ—Ü–µ–Ω–∏–≤–∞–µ—Ç–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–≤–æ–µ–π –ø–µ—á–µ–Ω–∏? (–Ω–∞–ø—Ä–∏–º–µ—Ä, –æ—â—É—â–µ–Ω–∏–µ —Ç—è–∂–µ—Å—Ç–∏, —É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –∂–∏—Ä–Ω–æ–π –ø–∏—â–∏ –∏–ª–∏ –∞–ª–∫–æ–≥–æ–ª—è)\n\nA: –ü–ª–æ—Ö–æ ‚Äî —É–ø–æ—Ç—Ä–µ–±–ª—è—é –∂–∏—Ä–Ω—É—é –ø–∏—â—É –∏–ª–∏ –∞–ª–∫–æ–≥–æ–ª—å, –µ—Å—Ç—å –¥–∏—Å–∫–æ–º—Ñ–æ—Ä—Ç.\nB: –ù–æ—Ä–º–∞–ª—å–Ω–æ ‚Äî –∑–ª–æ—É–ø–æ—Ç—Ä–µ–±–ª—è—é, –Ω–æ –æ—Å–æ–±—ã—Ö –ø—Ä–æ–±–ª–µ–º –Ω–µ —á—É–≤—Å—Ç–≤—É—é.\nC: –û—Ç–ª–∏—á–Ω–æ ‚Äî –ú–æ—è –ø–µ—á–µ–Ω—å –≤ –ø–æ–ª–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ.",
        'question_4': "–í–æ–ø—Ä–æ—Å 4: –ë—ã–≤–∞—é—Ç –ª–∏ —É –≤–∞—Å –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞ –∫–æ–∂–µ (—Å—É—Ö–æ—Å—Ç—å, –∑—É–¥, –ø–æ–∫—Ä–∞—Å–Ω–µ–Ω–∏–µ) –∏–ª–∏ —á–∞—Å—Ç—ã–µ —Å–∏–Ω—è–∫–∏ –±–µ–∑ –ø—Ä–∏—á–∏–Ω—ã?\n\nA: –ß–∞—Å—Ç–æ ‚Äî –∑–∞–º–µ—á–∞—é –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞ –∫–æ–∂–µ.\nB: –ò–Ω–æ–≥–¥–∞ ‚Äî –Ω–æ —è –Ω–µ –ø—Ä–∏–¥–∞—é —ç—Ç–æ–º—É –∑–Ω–∞—á–µ–Ω–∏—è.\nC: –†–µ–¥–∫–æ –∏–ª–∏ –≤–æ–æ–±—â–µ –Ω–µ –±—ã–≤–∞–µ—Ç.",
        'question_5': "–í–æ–ø—Ä–æ—Å 5: –ö–∞–∫ —á–∞—Å—Ç–æ –≤—ã –∏—Å–ø—ã—Ç—ã–≤–∞–µ—Ç–µ —Å—Ç—Ä–µ—Å—Å, —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å –∏–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å–æ —Å–Ω–æ–º?\n\nA: –ü–æ—á—Ç–∏ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ ‚Äî —Å–ª–æ–∂–Ω–æ —Ä–∞—Å—Å–ª–∞–±–∏—Ç—å—Å—è –∏ –∑–∞—Å–Ω—É—Ç—å.\nB: –ò–Ω–æ–≥–¥–∞ ‚Äî —Å—Ç—Ä–µ—Å—Å –±—ã–≤–∞–µ—Ç, –Ω–æ —è —Å–ø—Ä–∞–≤–ª—è—é—Å—å.\nC: –†–µ–¥–∫–æ –∏–ª–∏ –≤–æ–æ–±—â–µ –Ω–µ –∏—Å–ø—ã—Ç—ã–≤–∞—é –ø—Ä–æ–±–ª–µ–º.",
        'question_6': "–í–æ–ø—Ä–æ—Å 6: –ö–∞–∫–æ–π —É –≤–∞—Å —É—Ä–æ–≤–µ–Ω—å —ç–Ω–µ—Ä–≥–∏–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ –¥–Ω—è?\n\nA: –ß–∞—Å—Ç–æ —á—É–≤—Å—Ç–≤—É—é —É—Å—Ç–∞–ª–æ—Å—Ç—å –∏ —Å–æ–Ω–ª–∏–≤–æ—Å—Ç—å.\nB: –ë—ã–≤–∞–µ—Ç —É–ø–∞–¥–æ–∫ —Å–∏–ª, –Ω–æ —ç—Ç–æ –Ω–µ —Ä–µ–≥—É–ª—è—Ä–Ω–æ.\nC: –≠–Ω–µ—Ä–≥–∏–∏ —Ö–≤–∞—Ç–∞–µ—Ç –Ω–∞ –≤–µ—Å—å –¥–µ–Ω—å.",
        'result_gut': "üçÉ –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∫–æ–º–ø–ª–µ–∫—Ç –¥–ª—è –ñ–ö–¢.\n\n–ó–¥–æ—Ä–æ–≤—ã–π –∂–µ–ª—É–¥–æ–∫ ‚Äî —ç—Ç–æ –æ—Å–Ω–æ–≤–∞ —Ö–æ—Ä–æ—à–µ–≥–æ —É—Å–≤–æ–µ–Ω–∏—è –ø–∏—Ç–∞—Ç–µ–ª—å–Ω—ã—Ö –≤–µ—â–µ—Å—Ç–≤. –≠—Ç–æ—Ç –∫–æ–º–ø–ª–µ–∫—Ç —É–ª—É—á—à–∏—Ç –ø–µ—Ä–µ–≤–∞—Ä–∏–≤–∞–Ω–∏–µ –ø–∏—â–∏ –∏ —É—Å—Ç—Ä–∞–Ω–∏—Ç –ø—Ä–æ–±–ª–µ–º—ã —Å –ø–∏—â–µ–≤–∞—Ä–µ–Ω–∏–µ–º. –ê —Å –ø—Ä–æ–º–æ–∫–æ–¥–æ–º START –≤—ã –ø–æ–ª—É—á–∏—Ç–µ 5% –Ω–∞ –ø–æ–∫—É–ø–∫—É –ª—é–±–æ–≥–æ –∫–æ–º–ø–ª–µ–∫—Ç–∞!üéÅ \n\nhttps://doseit.ee/products/healthy-gut-support-supplement-pack-30-day-supply",
        'result_liver': "üçÄ –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∫–æ–º–ø–ª–µ–∫—Ç –¥–ª—è –ø–µ—á–µ–Ω–∏.\n\n–í–∞—à–∞ –ø–µ—á–µ–Ω—å –Ω—É–∂–¥–∞–µ—Ç—Å—è –≤ –ø–æ–¥–¥–µ—Ä–∂–∫–µ –∏–∑-–∑–∞ –Ω–∞–≥—Ä—É–∑–∫–∏ –Ω–∞ –æ—Ä–≥–∞–Ω–∏–∑–º. –ö–æ–º–ø–ª–µ–∫—Ç –¥–ª—è –ø–µ—á–µ–Ω–∏ –ø–æ–º–æ–∂–µ—Ç –≤—ã–≤–µ—Å—Ç–∏ —Ç–æ–∫—Å–∏–Ω—ã, —É–ª—É—á—à–∏—Ç—å –æ–±–º–µ–Ω –≤–µ—â–µ—Å—Ç–≤ –∏ —É–º–µ–Ω—å—à–∏—Ç—å —Ç—è–∂–µ—Å—Ç—å –≤ –ø—Ä–∞–≤–æ–º –ø–æ–¥—Ä–µ–±–µ—Ä—å–µ. –ê —Å –ø—Ä–æ–º–æ–∫–æ–¥–æ–º START –≤—ã –ø–æ–ª—É—á–∏—Ç–µ 5% –Ω–∞ –ø–æ–∫—É–ø–∫—É –ª—é–±–æ–≥–æ –∫–æ–º–ø–ª–µ–∫—Ç–∞!üéÅ \n\nhttps://doseit.ee/products/liver-support-supplement-pack-30-day-supply",
        'result_nervous': "üß† –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∫–æ–º–ø–ª–µ–∫—Ç –¥–ª—è –Ω–µ—Ä–≤–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã.\n\n–í–∞—à–∞ –Ω–µ—Ä–≤–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –∏—Å–ø—ã—Ç—ã–≤–∞–µ—Ç —Å—Ç—Ä–µ—Å—Å –∏ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏–µ. –≠—Ç–æ—Ç –∫–æ–º–ø–ª–µ–∫—Ç —É–ª—É—á—à–∏—Ç —Å–æ–Ω, —Å–Ω–∏–∑–∏—Ç —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å –∏ –æ–±–µ—Å–ø–µ—á–∏—Ç —Å–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ, –≤–ª–∏—è—è –Ω–∞ —Ä–∞–±–æ—Ç—É –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏—Ö –æ—Ä–≥–∞–Ω–æ–≤. –ê —Å –ø—Ä–æ–º–æ–∫–æ–¥–æ–º START –≤—ã –ø–æ–ª—É—á–∏—Ç–µ 5% –Ω–∞ –ø–æ–∫—É–ø–∫—É –ª—é–±–æ–≥–æ –∫–æ–º–ø–ª–µ–∫—Ç–∞!üéÅ \n\nhttps://doseit.ee/products/nervous-system-support-supplement-pack-30-day-supply",
        'note_gut': "\n\nüåü –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –ñ–ö–¢ –∏–º–µ–µ—Ç –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç, —Ç–∞–∫ –∫–∞–∫ –∑–¥–æ—Ä–æ–≤—ã–π –∂–µ–ª—É–¥–æ–∫ –ø–æ–º–æ–≥–∞–µ—Ç —É—Å–≤–∞–∏–≤–∞—Ç—å –ø–∏—Ç–∞—Ç–µ–ª—å–Ω—ã–µ –≤–µ—â–µ—Å—Ç–≤–∞.",
        'note_nervous': "\n\nüåü –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –±—ã–ª –æ—Ç–¥–∞–Ω –∫–æ–º–ø–ª–µ–∫—Ç—É –¥–ª—è –Ω–µ—Ä–≤–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã, —Ç–∞–∫ –∫–∞–∫ –¥–ª—è –Ω–∞—á–∞–ª–∞ —ç—Ç–æ—Ç –∫–æ–º–ø–ª–µ–∫—Ç –±—É–¥–µ—Ç –≤–∞–º –±–æ–ª–µ–µ –ø–æ–ª–µ–∑–µ–Ω, —á–µ–º –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –ø–µ—á–µ–Ω–∏. –ù–µ—Ä–≤–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª—è–µ—Ç —Ä–∞–±–æ—Ç–æ–π –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏—Ö –æ—Ä–≥–∞–Ω–æ–≤.",
        'result_healthy': "üéâ –ú–æ–ª–æ–¥—Ü—ã, —É –≤–∞—Å –Ω–µ –Ω–∞–±–ª—é–¥–∞–µ—Ç—Å—è —Å–µ—Ä—å–µ–∑–Ω—ã—Ö –Ω–µ–¥–æ–º–æ–≥–∞–Ω–∏–π! –ï—Å–ª–∏ –∂–µ –≤—ã –ø—Ä–∏–Ω–∏–º–∞–µ—Ç–µ –∫–∞–∫–∏–µ-–ª–∏–±–æ –ø–∏—â–µ–≤—ã–µ –¥–æ–±–∞–≤–∫–∏ –∏–ª–∏ –≤–∏—Ç–∞–º–∏–Ω—ã, —Ç–æ —Å–æ–≤–µ—Ç—É–µ–º –≤–∞–º –ø—Ä–æ–ø–∏—Ç—å –∫—É—Ä—Å –¥–ª—è –ñ–ö–¢, –≤–µ–¥—å –∑–¥–æ—Ä–æ–≤—ã–π –∂–µ–ª—É–¥–æ–∫ - –ø—É—Ç—å –∫ —É—Å–≤–∞–∏–≤–∞–Ω–∏—é –ø–æ–ª–µ–∑–Ω—ã—Ö –≤–µ—â–µ—Å—Ç–≤.–ê —Å –ø—Ä–æ–º–æ–∫–æ–¥–æ–º START –≤—ã –ø–æ–ª—É—á–∏—Ç–µ 5% –Ω–∞ –ø–æ–∫—É–ø–∫—É –ª—é–±–æ–≥–æ –∫–æ–º–ø–ª–µ–∫—Ç–∞!üéÅ \n\nhttps://doseit.ee/products/healthy-gut-support-supplement-pack-30-day-supply",
        'restart': "–ù–∞–∂–º–∏—Ç–µ –Ω–∞ /start, —á—Ç–æ–±—ã –ø—Ä–æ–π—Ç–∏ –æ–ø—Ä–æ—Å –∑–∞–Ω–æ–≤–æ.",
        'cancel': "üõë –û–ø—Ä–æ—Å –æ—Ç–º–µ–Ω—ë–Ω.",
        'question_accepted': "–í–æ–ø—Ä–æ—Å ‚Ññ {}/6 –ø—Ä–∏–Ω—è—Ç ‚úÖ"  # –õ–æ–∫–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    },
    'en': {
        'welcome': "üëã Welcome! This short survey will help you determine which set of DoseIt supplements is best for you to start with. There are formulas for the liver, nervous system and gut support.üìù",
        'question_1': "Question 1: How often do you experience digestive problems? (e.g., bloating, heaviness, constipation, diarrhea)\n\nA: Often ‚Äî almost every day or more than 3 times a week.\nB: Sometimes ‚Äî depends on food or lifestyle.\nC: Rarely ‚Äî I almost never have problems.",
        'question_2': "Question 2: Do you have skin rashes (acne, eczema), or bad breath, or metabolic problems?\n\nA: Often ‚Äî my skin and body react strongly to dietary changes.\nB: Sometimes ‚Äî there are outbreaks, but not critical.\nC: Rarely or never.",
        'question_3': "Question 3: How do you assess the condition of your liver? (e.g., feeling of heaviness, consumption of fatty foods or alcohol)\n\nA: Bad ‚Äî I consume fatty foods or alcohol, there is discomfort.\nB: Normal ‚Äî I overindulge, but I don't feel any particular problems.\nC: Good ‚Äî My liver is in perfect condition.",
        'question_4': "Question 4: Do you have skin changes (dryness, itching, redness) or frequent bruising for no reason?\n\nA: Often ‚Äî I notice significant skin changes.\nB: Sometimes ‚Äî but I don't pay attention to it.\nC: Rarely or never.",
        'question_5': "Question 5: How often do you experience stress, anxiety, or sleep problems?\n\nA: Almost constantly ‚Äî it's hard to relax and fall asleep.\nB: Sometimes ‚Äî there is stress, but I cope with it.\nC: Rarely or I don't have any problems.",
        'question_6': "Question 6: What is your energy level throughout the day?\n\nA: I often feel tired and sleepy.\nB: There is a loss of energy, but it is not regular.\nC: I have enough energy for the whole day.",
        'result_gut': "ü•¶ Recommended Gut Health Pack.\n\nA healthy stomach is the foundation of good nutrient absorption. This pack improves digestion and helps eliminate digestive issues. Plus, use the promo code START to get 5% off any pack purchase! üéÅ\n\nhttps://doseit.ee/products/healthy-gut-support-supplement-pack-30-day-supply",
        'result_liver': "üçÄ Recommended Liver Support Pack.\n\nYour liver needs support due to the strain on your body. This liver pack helps detoxify, boost metabolism, and relieve heaviness in the right upper abdomen. Plus, use the promo code START to get 5% off any pack purchase! üéÅ\n\nhttps://doseit.ee/products/liver-support-supplement-pack-30-day-supply",
        'result_nervous': "üß† Recommended Nervous System Support Pack.\n\nYour nervous system is under stress and tension. This pack improves sleep, reduces anxiety, and promotes relaxation while supporting the internal organs. Plus, use the promo code START to get 5% off any pack purchase! üéÅ\n\nhttps://doseit.ee/products/nervous-system-support-supplement-pack-30-day-supply",
        'note_gut': "\n\nüåü Note: The gut support formula takes priority, as a healthy stomach helps absorb nutrients.",
        'note_nervous': "\n\nüåü Note: Perhaps priority can be given to the nervous system support formula, as the nervous system controls the functioning of the internal organs.",
        'result_healthy': "üéâ Well done! No significant health issues detected. However, if you take any supplements or vitamins, we recommend a Gut Health Pack, as a healthy stomach is key to absorbing nutrients. Plus, use the promo code START to get 5% off any pack purchase! üéÅ\n\nhttps://doseit.ee/products/healthy-gut-support-supplement-pack-30-day-supply",
        'restart': "Click /start to take the survey again.",
        'cancel': "üõë Survey canceled.",
        'question_accepted': "Question ‚Ññ {}/6 accepted ‚úÖ"  # –õ–æ–∫–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ  
    },
    'et': {
        'welcome': "üëã Tere tulemast! See kiir k√ºsimustik aitab teil kindlaks teha, Milline DoseIt lisakomplekt on teile k√µige parem alustamiseks: maksa-, n√§rvi- v√µi seedetrakti toetus.üìù",
        'question_1': "K√ºsimus 1: Kui sageli teil esineb seedeh√§ireid? (nt k√µhu puhitus, raskustunne, k√µhukinnisus, k√µhulahtisus)\n\nA: Sageli ‚Äî peaaegu iga p√§ev v√µi rohkem kui 3 korda n√§dalas.\nB: M√µnikord ‚Äî s√µltub toidust v√µi eluviisist.\nC: Harva ‚Äî mul ei ole peaaegu kunagi probleeme.",
        'question_2': "K√ºsimus 2: Kas teil on nahal√∂√∂ve (akne, ekseem), v√µi halb hingamine v√µi ainevahetushaigused?\n\nA: Sageli ‚Äî mu nahk ja keha reageerivad toidu muutustele tugevalt.\nB: M√µnikord ‚Äî on puhanguid, kuid mitte kriitilisi.\nC: Harva v√µi mitte kunagi.",
        'question_3': "K√ºsimus 3: Kuidas hindate oma maksa seisundit? (nt raskustunne, rasvase toidu v√µi alkoholi tarbimine)\n\nA: Halb ‚Äî tarbin rasvast toitu v√µi alkoholi, on ebamugavust.\nB: Normaalne ‚Äî √ºletarbin, kuid ei tunne erilisi probleeme.\nC: V√§ga hea ‚Äî Mu maks on t√§iuslikus korras.",
        'question_4': "K√ºsimus 4: Kas teil on nahamuutused (kuivus, s√ºgelus, punetus) v√µi sageli sinikaid ilma p√µhjuseta?\n\nA: Sageli ‚Äî m√§rkan olulisi nahamuutusi.\nB: M√µnikord ‚Äî kuid ma ei p√∂√∂ra sellele t√§helepanu.\nC: Harva v√µi mitte kunagi.",
        'question_5': "K√ºsimus 5: Kui sageli tunnete stressi, √§revust v√µi uneh√§ireid?\n\nA: Peaaegu pidevalt ‚Äî on raske l√µ√µgastuda ja magama j√§√§da.\nB: M√µnikord ‚Äî on stressi, kuid ma saan hakkama.\nC: Harva v√µi mul pole probleeme.",
        'question_6': "K√ºsimus 6: Mis on teie energiatase p√§eva jooksul?\n\nA: Tunnetan sageli v√§simust ja unisust.\nB: Energiatase langeb, kuid see ei ole regulaarne.\nC: Mul on piisavalt energiat kogu p√§evaks.",
        'result_gut': "ü•¶ Soovitatav seedetrakti toidulisandite komplekt.\n\nTerve magu on hea toitainete omastamise alus. See komplekt parandab seedimist ja aitab k√µrvaldada seedeprobleeme. Lisaks saate sooduskoodiga START 5% allahindlust iga komplekti ostult! üéÅ\n\nhttps://doseit.ee/products/healthy-gut-support-supplement-pack-30-day-supply",
        'result_liver': "üçÄ Soovitatav maksatoetuse komplekt.\n\nTeie maks vajab toetust organismi koormuse t√µttu. See komplekt aitab eemaldada toksiine, parandada ainevahetust ja v√§hendada raskustunnet paremal √ºlak√µhus. Lisaks saate sooduskoodiga START 5% allahindlust iga komplekti ostult! üéÅ\n\nhttps://doseit.ee/products/liver-support-supplement-pack-30-day-supply",
        'result_nervous': "üß† Soovitatav n√§rvis√ºsteemi toetav komplekt.\n\nTeie n√§rvis√ºsteem on stressis ja pinges. See komplekt parandab und, v√§hendab √§revust ja aitab l√µ√µgastuda, toetades samal ajal siseorganite t√∂√∂d. Lisaks saate sooduskoodiga START 5% allahindlust iga komplekti ostult! üéÅ\n\nhttps://doseit.ee/products/nervous-system-support-supplement-pack-30-day-supply",
        'note_gut': "\n\nüåü M√§rkus: Soolestiku toetuse komplektil on prioriteet, kuna terve k√µht aitab toitaineid omastada.",
        'note_nervous': "\n\nüåü M√§rkus: V√µib-olla saab prioriteediks pidada n√§rvis√ºsteemi komplekti, kuna see kontrollib siseorganite t√∂√∂d.",
        'result_healthy': "üéâ Tubli! Teil ei ole m√§rkimisv√§√§rseid terviseprobleeme. Kui te siiski tarvitate toidulisandeid v√µi vitamiine, soovitame seedetrakti komplekti, sest terve magu aitab toitaineid paremini omastada. Lisaks saate sooduskoodiga START 5% allahindlust iga komplekti ostult! üéÅ\n\nhttps://doseit.ee/products/healthy-gut-support-supplement-pack-30-day-supply",
        'restart': "Kl√µpsake /start, et uuesti uuringut teha.",
        'cancel': "üõë Uuring t√ºhistati.",
        'question_accepted': "K√ºsimus ‚Ññ {}/6 vastu v√µetud ‚úÖ"  # –õ–æ–∫–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    }
}

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_responses.clear()

    keyboard = [
        [InlineKeyboardButton("–†—É—Å—Å–∫–∏–π", callback_data='ru')],
        [InlineKeyboardButton("English", callback_data='en')],
        [InlineKeyboardButton("Eesti", callback_data='et')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text("üíäPlease choose your language / –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ / Palun valige keel:üíä", reply_markup=reply_markup)
    return LANGUAGE

async def handle_language(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    user_responses['language'] = query.data  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫

    lang = user_responses['language']
    keyboard = [
        [InlineKeyboardButton("A", callback_data='A')],
        [InlineKeyboardButton("B", callback_data='B')],
        [InlineKeyboardButton("C", callback_data='C')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await query.edit_message_text(language_texts[lang]['welcome'])
    await context.bot.send_message(chat_id=update.effective_chat.id, text=language_texts[lang]['question_1'], reply_markup=reply_markup)
    return QUESTION_1  # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –ø–µ—Ä–≤–æ–º—É –≤–æ–ø—Ä–æ—Å—É

async def handle_question(update: Update, context: ContextTypes.DEFAULT_TYPE, question_num, next_question, question_text):
    query = update.callback_query
    await query.answer()
    user_responses[f'q{question_num}'] = query.data

    lang = user_responses['language']
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    await query.edit_message_text(language_texts[lang]['question_accepted'].format(question_num))
    await asyncio.sleep(1)

    keyboard = [
        [InlineKeyboardButton("A", callback_data='A')],
        [InlineKeyboardButton("B", callback_data='B')],
        [InlineKeyboardButton("C", callback_data='C')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await context.bot.send_message(chat_id=update.effective_chat.id, text=question_text, reply_markup=reply_markup)
    return next_question

async def handle_question_1(update: Update, context: ContextTypes.DEFAULT_TYPE):
    lang = user_responses['language']
    return await handle_question(update, context, 1, QUESTION_2, language_texts[lang]['question_2'])

async def handle_question_2(update: Update, context: ContextTypes.DEFAULT_TYPE):
    lang = user_responses['language']
    return await handle_question(update, context, 2, QUESTION_3, language_texts[lang]['question_3'])

async def handle_question_3(update: Update, context: ContextTypes.DEFAULT_TYPE):
    lang = user_responses['language']
    return await handle_question(update, context, 3, QUESTION_4, language_texts[lang]['question_4'])

async def handle_question_4(update: Update, context: ContextTypes.DEFAULT_TYPE):
    lang = user_responses['language']
    return await handle_question(update, context, 4, QUESTION_5, language_texts[lang]['question_5'])

async def handle_question_5(update: Update, context: ContextTypes.DEFAULT_TYPE):
    lang = user_responses['language']
    return await handle_question(update, context, 5, QUESTION_6, language_texts[lang]['question_6'])

async def handle_question_6(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    user_responses['q6'] = query.data

    lang = user_responses.get('language', 'ru')  # –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ —è–∑—ã–∫–∞
    try:
        await query.edit_message_text(language_texts[lang]['question_accepted'].format(6))
    except Exception:
        pass  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è

    await asyncio.sleep(1)

    # –ü–æ–¥—Å—á—ë—Ç –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–≤ –¥–ª—è "A" –∏ "B"
    digestive_A = sum(1 for q in ['q1', 'q2'] if user_responses.get(q) == 'A')
    liver_A = sum(1 for q in ['q3', 'q4'] if user_responses.get(q) == 'A')
    nervous_A = sum(1 for q in ['q5', 'q6'] if user_responses.get(q) == 'A')

    digestive_B = sum(1 for q in ['q1', 'q2'] if user_responses.get(q) == 'B')
    liver_B = sum(1 for q in ['q3', 'q4'] if user_responses.get(q) == 'B')
    nervous_B = sum(1 for q in ['q5', 'q6'] if user_responses.get(q) == 'B')

    # ‚úÖ 1. –ï—Å–ª–∏ –≤—Å–µ –æ—Ç–≤–µ—Ç—ã "C" ‚Üí –∑–¥–æ—Ä–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    if all(user_responses.get(q) == 'C' for q in ['q1', 'q2', 'q3', 'q4', 'q5', 'q6']):
        result = language_texts[lang]['result_healthy']
    
    else:
        # ‚úÖ 2. –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –ø–æ "A"
        if digestive_A > max(liver_A, nervous_A):
            result = language_texts[lang]['result_gut']
        elif nervous_A > max(digestive_A, liver_A):
            result = language_texts[lang]['result_nervous']
        elif liver_A > max(digestive_A, nervous_A):
            result = language_texts[lang]['result_liver']
        
        # ‚úÖ 3. –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ "A"
        elif digestive_A == nervous_A and digestive_A > liver_A:
            result = language_texts[lang]['result_gut'] + "\n\n" + language_texts[lang].get('note_gut', "")
        elif digestive_A == liver_A and digestive_A > nervous_A:
            result = language_texts[lang]['result_gut'] + "\n\n" + language_texts[lang].get('note_gut', "")
        elif nervous_A == liver_A and nervous_A > digestive_A:
            result = language_texts[lang]['result_nervous'] + "\n\n" + language_texts[lang].get('note_nervous', "")
        elif digestive_A == nervous_A == liver_A:
            result = language_texts[lang]['result_gut'] + "\n\nüåü " + language_texts[lang].get('note_gut', "")

        # ‚úÖ 4. –ï—Å–ª–∏ "A" –Ω–µ—Ç, –Ω–æ –µ—Å—Ç—å "B" ‚Üí –≤—ã–±–∏—Ä–∞–µ–º –ø–æ "B"
        elif max(digestive_A, liver_A, nervous_A) == 0:
            if liver_B > max(digestive_B, nervous_B):
                result = language_texts[lang]['result_liver'] + "\n\nüåü " + language_texts[lang].get('note_nervous', "")
            elif nervous_B > max(digestive_B, liver_B):
                result = language_texts[lang]['result_nervous'] + "\n\nüåü " + language_texts[lang].get('note_nervous', "")
            elif digestive_B > max(liver_B, nervous_B):
                result = language_texts[lang]['result_gut'] + "\n\nüåü " + language_texts[lang].get('note_gut', "")
            elif digestive_B == nervous_B == liver_B and digestive_B > 0:
                result = language_texts[lang]['result_nervous'] + "\n\nüåü " + language_texts[lang].get('note_nervous', "")

        # ‚úÖ 5. –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ "B"
        elif digestive_B == nervous_B and digestive_B > liver_B:
            result = language_texts[lang]['result_nervous'] + "\n\nüåü " + language_texts[lang].get('note_nervous', "")
        elif digestive_B == liver_B and digestive_B > nervous_B:
            result = language_texts[lang]['result_liver'] + "\n\nüåü " + language_texts[lang].get('note_nervous', "")
        elif nervous_B == liver_B and nervous_B > digestive_B:
            result = language_texts[lang]['result_nervous'] + "\n\nüåü " + language_texts[lang].get('note_nervous', "")

        # ‚úÖ 6. –ï—Å–ª–∏ –Ω–µ—Ç "A" –∏ "B" ‚Üí –ñ–ö–¢ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        else:
            result = language_texts[lang]['result_gut'] + "\n\nüåü " + language_texts[lang].get('note_gut', "")

    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∫–ª–∏–µ–Ω—Ç—É
    await context.bot.send_message(chat_id=update.effective_chat.id, text=result)
    await context.bot.send_message(chat_id=update.effective_chat.id, text=language_texts[lang].get('restart', "Click /start to take the survey again."))
    return ConversationHandler.END

async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    lang = user_responses.get('language', 'ru')
    await update.message.reply_text(language_texts[lang]['cancel'])
    return ConversationHandler.END

async def main():
    application = Application.builder().token(TOKEN).build()

    conv_handler = ConversationHandler(
        entry_points=[CommandHandler('start', start)],  # –ö–æ–º–∞–Ω–¥–∞ /start –∑–∞–ø—É—Å–∫–∞–µ—Ç –æ–ø—Ä–æ—Å
        states={
            LANGUAGE: [CallbackQueryHandler(handle_language)],  # –°–æ—Å—Ç–æ—è–Ω–∏–µ –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞
            QUESTION_1: [CallbackQueryHandler(handle_question_1)],
            QUESTION_2: [CallbackQueryHandler(handle_question_2)],
            QUESTION_3: [CallbackQueryHandler(handle_question_3)],
            QUESTION_4: [CallbackQueryHandler(handle_question_4)],
            QUESTION_5: [CallbackQueryHandler(handle_question_5)],
            QUESTION_6: [CallbackQueryHandler(handle_question_6)],
        },
        fallbacks=[CommandHandler('start', start), CommandHandler('cancel', cancel)]  # /start –∏ /cancel —Å–±—Ä–∞—Å—ã–≤–∞—é—Ç –æ–ø—Ä–æ—Å
    )

    application.add_handler(conv_handler)

    # üîπ –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π –≤–µ–±—Ö—É–∫ –ø–µ—Ä–µ–¥ —É—Å—Ç–∞–Ω–æ–≤–∫–æ–π –Ω–æ–≤–æ–≥–æ
    logger.info("–£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–≥–æ –≤–µ–±—Ö—É–∫–∞...")
    await application.bot.delete_webhook()

    # üîπ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—ã–π –≤–µ–±—Ö—É–∫
    logger.info(f"–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–µ–±—Ö—É–∫: {WEBHOOK_URL}")
    await application.bot.set_webhook(url=WEBHOOK_URL)

    # üîπ –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä –≤–µ–±—Ö—É–∫–∞
    await application.run_webhook(
        listen="0.0.0.0",
        port=PORT,
        webhook_url=WEBHOOK_URL
    )

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {e}")
